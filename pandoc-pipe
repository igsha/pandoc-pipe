#!/usr/bin/env python3
# -*- coding: utf-8 -*-

__version__ = '0.0.2'

import panflute as pf
import json

classes = None

def prepare(doc):
    global classes
    classes = doc.get_metadata('pandoc-pipe', {
        'plantuml': ["plantuml", "-tsvg", "-pipe"]
    })

def action(elem, doc):
    if isinstance(elem, pf.CodeBlock):
        global classes
        for cls, cmd in classes.items():
            if cls in elem.classes:
                if 'command' in elem.attributes:
                    cmd = json.loads(elem.attributes['command'])
                out = pf.shell(cmd, wait=True, msg=elem.text.encode('utf-8'))
                elem = pf.RawBlock(out.decode('utf-8'), format='html')

    return elem

pf.run_filter(action, prepare=prepare)
